// <auto-generated />
using System;
using EntityDb.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityDb.Migrations
{
    [DbContext(typeof(QLDBContext))]
    [Migration("20200613175334_updatedatabase")]
    partial class updatedatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityDb.Entities.BangCap", b =>
                {
                    b.Property<string>("MaBang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NhanVienMaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenBang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBang");

                    b.HasIndex("NhanVienMaNhanVien");

                    b.ToTable("BangCap");
                });

            modelBuilder.Entity("EntityDb.Entities.ChiTietPhieuMuon", b =>
                {
                    b.Property<int>("MaPhieuMuon")
                        .HasColumnType("int");

                    b.Property<string>("MaSach")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaPhieuMuon", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("ChiTietPhieuMuon");
                });

            modelBuilder.Entity("EntityDb.Entities.DocGia", b =>
                {
                    b.Property<int>("MaDocGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenDocGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaPhieuMuon")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayLapThe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tien")
                        .HasColumnType("int");

                    b.HasKey("MaDocGia");

                    b.HasIndex("MaPhieuMuon");

                    b.ToTable("DocGia");
                });

            modelBuilder.Entity("EntityDb.Entities.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaPhieuThuTien")
                        .HasColumnType("int");

                    b.Property<string>("NgaySinh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaPhieuThuTien");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("EntityDb.Entities.PhieuMuonSach", b =>
                {
                    b.Property<int>("MaPhieuMuon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaDocGia")
                        .HasColumnType("int");

                    b.Property<string>("NgayMuon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayTra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhieuMuon");

                    b.ToTable("PhieuMuonSach");
                });

            modelBuilder.Entity("EntityDb.Entities.PhieuThuTien", b =>
                {
                    b.Property<int>("MaPhieuThuTien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaDocGia")
                        .HasColumnType("int");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoTienNo")
                        .HasColumnType("int");

                    b.Property<int>("SoTienThu")
                        .HasColumnType("int");

                    b.HasKey("MaPhieuThuTien");

                    b.HasIndex("MaDocGia");

                    b.ToTable("PhieuThuTien");
                });

            modelBuilder.Entity("EntityDb.Entities.Sach", b =>
                {
                    b.Property<string>("MaSach")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NamXuatBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayNhap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaXuatBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TriGia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSach");

                    b.ToTable("Sach");
                });

            modelBuilder.Entity("EntityDb.Entities.BangCap", b =>
                {
                    b.HasOne("EntityDb.Entities.NhanVien", null)
                        .WithMany("Bangcaps")
                        .HasForeignKey("NhanVienMaNhanVien");
                });

            modelBuilder.Entity("EntityDb.Entities.ChiTietPhieuMuon", b =>
                {
                    b.HasOne("EntityDb.Entities.PhieuMuonSach", "PhieuMuonSach")
                        .WithMany("chiTietPhieuMuon")
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityDb.Entities.Sach", "Sach")
                        .WithMany("chiTietPhieuMuon")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityDb.Entities.DocGia", b =>
                {
                    b.HasOne("EntityDb.Entities.PhieuMuonSach", "phieuMuaSach")
                        .WithMany("DocGia")
                        .HasForeignKey("MaPhieuMuon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityDb.Entities.NhanVien", b =>
                {
                    b.HasOne("EntityDb.Entities.PhieuThuTien", "PhieuThuTien")
                        .WithMany("nhanViens")
                        .HasForeignKey("MaPhieuThuTien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityDb.Entities.PhieuThuTien", b =>
                {
                    b.HasOne("EntityDb.Entities.DocGia", "DocGia")
                        .WithMany("PhieuThuTien")
                        .HasForeignKey("MaDocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
